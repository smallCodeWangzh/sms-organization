<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.briup.organization.mapper.MemberMapper">
  <resultMap id="BaseResultMap" type="com.briup.organization.bean.Member">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="work_address" jdbcType="VARCHAR" property="workAddress" />
    <result column="school_clazz" jdbcType="VARCHAR" property="schoolClazz" />
    <result column="graduate_school" jdbcType="VARCHAR" property="graduateSchool" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="job_number" jdbcType="VARCHAR" property="jobNumber" />
    <result column="status" jdbcType="BOOLEAN" property="status" />
    <result column="backup1" jdbcType="VARCHAR" property="backup1" />
    <result column="backup2" jdbcType="VARCHAR" property="backup2" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, email, work_address, school_clazz, graduate_school, role_name, phone, 
    `position`, job_number, `status`, backup1, backup2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_member
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_member
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.briup.organization.bean.Member" useGeneratedKeys="true">
    insert into tb_member (`name`, email, work_address, 
      school_clazz, graduate_school, role_name, 
      phone, `position`, job_number, 
      `status`, backup1, backup2
      )
    values (#{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{workAddress,jdbcType=VARCHAR}, 
      #{schoolClazz,jdbcType=VARCHAR}, #{graduateSchool,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, #{jobNumber,jdbcType=VARCHAR}, 
      #{status,jdbcType=BOOLEAN}, #{backup1,jdbcType=VARCHAR}, #{backup2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.briup.organization.bean.Member" useGeneratedKeys="true">
    insert into tb_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="workAddress != null">
        work_address,
      </if>
      <if test="schoolClazz != null">
        school_clazz,
      </if>
      <if test="graduateSchool != null">
        graduate_school,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="position != null">
        `position`,
      </if>
      <if test="jobNumber != null">
        job_number,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="backup1 != null">
        backup1,
      </if>
      <if test="backup2 != null">
        backup2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="workAddress != null">
        #{workAddress,jdbcType=VARCHAR},
      </if>
      <if test="schoolClazz != null">
        #{schoolClazz,jdbcType=VARCHAR},
      </if>
      <if test="graduateSchool != null">
        #{graduateSchool,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="jobNumber != null">
        #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BOOLEAN},
      </if>
      <if test="backup1 != null">
        #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null">
        #{backup2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.briup.organization.bean.Member">
    update tb_member
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="workAddress != null">
        work_address = #{workAddress,jdbcType=VARCHAR},
      </if>
      <if test="schoolClazz != null">
        school_clazz = #{schoolClazz,jdbcType=VARCHAR},
      </if>
      <if test="graduateSchool != null">
        graduate_school = #{graduateSchool,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        `position` = #{position,jdbcType=VARCHAR},
      </if>
      <if test="jobNumber != null">
        job_number = #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BOOLEAN},
      </if>
      <if test="backup1 != null">
        backup1 = #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null">
        backup2 = #{backup2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.briup.organization.bean.Member">
    update tb_member
    set `name` = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      work_address = #{workAddress,jdbcType=VARCHAR},
      school_clazz = #{schoolClazz,jdbcType=VARCHAR},
      graduate_school = #{graduateSchool,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      `position` = #{position,jdbcType=VARCHAR},
      job_number = #{jobNumber,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=BOOLEAN},
      backup1 = #{backup1,jdbcType=VARCHAR},
      backup2 = #{backup2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>